<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <PackageId>mcpserver.openxml</PackageId>
    <ToolCommandName>mcpserver.openxml</ToolCommandName>
    <RootNamespace>ModelContextProtocolServer.OpenXml</RootNamespace>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <IsPackable>true</IsPackable>

    <!-- Set up the NuGet package to be an MCP server -->
    <PackAsTool>true</PackAsTool>
    <PackageType>McpServer</PackageType>
    
    <!--<PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildProjectDirectory)/../../PackageReleaseNotes.txt"))</PackageReleaseNotes>-->
    <PackageTags>MCP;ModelContextProtocol;AI;LLM;Server;Stdio;Sse;OpenXML;Word;docx</PackageTags>
    <Description>An Sse or Stdio MCP server as dotnet tool for reading .docx files.</Description>
    <PackageReadmeFile>PackageReadme.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include=".mcp\server.json">
      <PackagePath>/.mcp/</PackagePath>
      <Pack>true</Pack>
    </None>
    <None Include="PackageReadme.md" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\mcpserver.openxml.stdio\Services\WordDocumentReader.cs" Link="Services\WordDocumentReader.cs" />
    <Compile Include="..\mcpserver.openxml.stdio\Tools\OpenXmlTools.cs" Link="Tools\OpenXmlTools.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="DocumentFormat.OpenXml" Version="3.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ModelContextProtocolServer.Hybrid\ModelContextProtocolServer.Hybrid.csproj" />
  </ItemGroup>

  <Target Name="UpdateServerJsonVersion" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <ServerJsonPath>$(MSBuildProjectDirectory)\.mcp\server.json</ServerJsonPath>
      <DirectoryBuildPropsPath>$(MSBuildProjectDirectory)\..\Directory.Build.props</DirectoryBuildPropsPath>
      <UpdateScriptPath>$(MSBuildProjectDirectory)\..\Update-ServerJsonVersion.ps1</UpdateScriptPath>
    </PropertyGroup>

    <Exec Command="pwsh -NoProfile -ExecutionPolicy Bypass -File &quot;$(UpdateScriptPath)&quot; -ServerJsonPath &quot;$(ServerJsonPath)&quot; -DirectoryBuildPropsPath &quot;$(DirectoryBuildPropsPath)&quot;" />
  </Target>

</Project>